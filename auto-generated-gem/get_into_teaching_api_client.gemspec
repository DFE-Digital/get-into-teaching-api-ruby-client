# -*- encoding: utf-8 -*-

=begin
#Get into Teaching API - V1

#                             Provides a RESTful API for integrating with the Get into Teaching CRM.                             The Get into Teaching (GIT) API sits in front of the GIT CRM, which uses the [Microsoft Dynamics365](https://docs.microsoft.com/en-us/dynamics365/) platform (the [Customer Engagement](https://docs.microsoft.com/en-us/dynamics365/customerengagement/on-premises/developer/overview) module is used for storing Candidate information and the [Marketing](https://docs.microsoft.com/en-us/dynamics365/marketing/developer/using-events-api) module for managing Events).                             The GIT API aims to provide:                             * Simple, task-based RESTful APIs.                             * Message queueing (while the GIT CRM is offline for updates).                             * Validation to ensure consistency across services writing to the GIT CRM.                         

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.14.0

=end

$:.push File.expand_path("../lib", __FILE__)
require "get_into_teaching_api_client/version"

Gem::Specification.new do |s|
  s.name        = "get_into_teaching_api_client"
  s.version     = GetIntoTeachingApiClient::VERSION
  s.platform    = Gem::Platform::RUBY
  s.authors     = ["Ross Oliver"]
  s.email       = ["ross.oliver@digital.education.gov.uk"]
  s.homepage    = "https://github.com/DFE-Digital/get-into-teaching-api-ruby-client"
  s.summary     = "Ruby client for the Get into Teaching API"
  s.description = "A Ruby client auto-generated from the Get into Teaching API swagger documentation."
  s.license     = "MIT"
  s.required_ruby_version = ">= 2.7"
  s.metadata    = {}

  s.add_runtime_dependency 'faraday', '>= 1.0.1', '< 3.0'
  s.add_runtime_dependency 'faraday-multipart'
  s.add_runtime_dependency 'marcel'

  s.add_development_dependency 'rspec', '~> 3.6', '>= 3.6.0'

  s.files         = `find *`.split("\n").uniq.sort.select { |f| !f.empty? }
  s.test_files    = `find spec/*`.split("\n")
  s.executables   = []
  s.require_paths = ["lib"]
end
