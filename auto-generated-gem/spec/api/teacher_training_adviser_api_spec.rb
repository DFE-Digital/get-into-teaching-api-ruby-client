=begin
#Get into Teaching API - V1

# Provides a RESTful API for integrating with the Get into Teaching CRM. The Get into Teaching (GIT) API sits in front of the GIT CRM, which uses the [Microsoft Dynamics365](https://docs.microsoft.com/en-us/dynamics365/) platform (the [Customer Engagement](https://docs.microsoft.com/en-us/dynamics365/customerengagement/on-premises/developer/overview) module is used for storing Candidate information and the [Marketing](https://docs.microsoft.com/en-us/dynamics365/marketing/developer/using-events-api) module for managing Events). The GIT API aims to provide: * Simple, task-based RESTful APIs. * Message queueing (while the GIT CRM is offline for updates). * Validation to ensure consistency across services writing to the GIT CRM.                         

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for GetIntoTeachingApiClient::TeacherTrainingAdviserApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TeacherTrainingAdviserApi' do
  before do
    # run before each test
    @api_instance = GetIntoTeachingApiClient::TeacherTrainingAdviserApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TeacherTrainingAdviserApi' do
    it 'should create an instance of TeacherTrainingAdviserApi' do
      expect(@api_instance).to be_instance_of(GetIntoTeachingApiClient::TeacherTrainingAdviserApi)
    end
  end

  # unit tests for exchange_access_token_for_teacher_training_adviser_sign_up
  # Retrieves a pre-populated TeacherTrainingAdviserSignUp for the candidate.
  #                   Retrieves a pre-populated TeacherTrainingAdviserSignUp for the candidate. The &#x60;accessToken&#x60; is obtained from a                   &#x60;POST /candidates/access_tokens&#x60; request (you must also ensure the &#x60;ExistingCandidateRequest&#x60; payload you                   exchanged for your token matches the request payload here).
  # @param access_token Access token (PIN code).
  # @param existing_candidate_request Candidate access token request (must match an existing candidate).
  # @param [Hash] opts the optional parameters
  # @return [TeacherTrainingAdviserSignUp]
  describe 'exchange_access_token_for_teacher_training_adviser_sign_up test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sign_up_teacher_training_adviser_candidate
  # Sign up a candidate for the Teacher Training Adviser service.
  # Queue a candidate upsert job.
  # @param teacher_training_adviser_sign_up Candidate to sign up for the Teacher Training Adviser service.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'sign_up_teacher_training_adviser_candidate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
