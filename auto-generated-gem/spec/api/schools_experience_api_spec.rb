=begin
#Get into Teaching API - V1

# Provides a RESTful API for integrating with the Get into Teaching CRM. The Get into Teaching (GIT) API sits in front of the GIT CRM, which uses the [Microsoft Dynamics365](https://docs.microsoft.com/en-us/dynamics365/) platform (the [Customer Engagement](https://docs.microsoft.com/en-us/dynamics365/customerengagement/on-premises/developer/overview) module is used for storing Candidate information and the [Marketing](https://docs.microsoft.com/en-us/dynamics365/marketing/developer/using-events-api) module for managing Events). The GIT API aims to provide: * Simple, task-based RESTful APIs. * Message queueing (while the GIT CRM is offline for updates). * Validation to ensure consistency across services writing to the GIT CRM.                         

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.19

=end

require 'spec_helper'
require 'json'

# Unit tests for GetIntoTeachingApiClient::SchoolsExperienceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SchoolsExperienceApi' do
  before do
    # run before each test
    @instance = GetIntoTeachingApiClient::SchoolsExperienceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SchoolsExperienceApi' do
    it 'should create an instance of SchoolsExperienceApi' do
      expect(@instance).to be_instance_of(GetIntoTeachingApiClient::SchoolsExperienceApi)
    end
  end

  # unit tests for add_classroom_experience_note
  # Add a classroom experience note to the candidate.
  # Adds a new classroom experience note to the candidate record
  # @param id The &#x60;id&#x60; of the &#x60;Candidate&#x60;.
  # @param body Classroom experience note.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'add_classroom_experience_note test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for exchange_access_token_for_schools_experience_sign_up
  # Retrieves a pre-populated SchoolsExperienceSignUp for the candidate.
  #                  Retrieves a pre-populated SchoolsExperienceSignUp for the candidate. The &#x60;accessToken&#x60; is obtained from a                  &#x60;POST /candidates/access_tokens&#x60; request (you must also ensure the &#x60;ExistingCandidateRequest&#x60; payload you                  exchanged for your token matches the request payload here).
  # @param access_token Access token (PIN code).
  # @param body Candidate access token request (must match an existing candidate).
  # @param [Hash] opts the optional parameters
  # @return [SchoolsExperienceSignUp]
  describe 'exchange_access_token_for_schools_experience_sign_up test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_schools_experience_sign_up
  # Retrieves an existing SchoolsExperienceSignUp for the candidate.
  # @param id The &#x60;id&#x60; of the &#x60;Candidate&#x60;.
  # @param [Hash] opts the optional parameters
  # @return [SchoolsExperienceSignUp]
  describe 'get_schools_experience_sign_up test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_schools_experience_sign_ups
  # Retrieves existing SchoolsExperienceSignUps for the candidate &#x60;ids&#x60;.
  # @param ids A collection of &#x60;Candidate&#x60; &#x60;id&#x60;s.
  # @param [Hash] opts the optional parameters
  # @return [Array<SchoolsExperienceSignUp>]
  describe 'get_schools_experience_sign_ups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sign_up_schools_experience_candidate
  # Sign up a candidate for the Schools Experience service.
  #                  Upsert a candidate. Returns the updated candidate information in the body of the response along                  with a Location header which specifies the location of the candidate
  # @param body Candidate to sign up for the Schools Experience service.
  # @param [Hash] opts the optional parameters
  # @return [SchoolsExperienceSignUp]
  describe 'sign_up_schools_experience_candidate test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
